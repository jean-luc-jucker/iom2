plot.subtitle = element_text(size = 18))
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res_slim.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
df
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
group_by(Country) %>%
summarise(Count = n())
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
group_by(Country, BusinessSuccess, BusinessProfitability) %>%
summarise(Count = n())
df %>%
select(Country, BusinessSuccess, BusinessProfitability)
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country)
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country) %>%
group_by(Country, BusinessSuccess, BusinessSuccess) %>%
summarise(Count = n())
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country) %>%
group_by(Country, BusinessSuccess, BusinessProfitability) %>%
summarise(Count = n())
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country) %>%
group_by(Country, BusinessSuccess, BusinessProfitability, n) %>%
summarise(Count = n())
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country)
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country, BusinessSuccess, BusinessProfitability)
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country)
df[df$Country=='Sénégal',]
df %>%
select(Country, BusinessSuccess, BusinessProfitability) %>%
add_count(Country)
df %>%
select(Country, BusinessSuccess)
df %>%
select(Country, BusinessSuccess)
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country)
df %>% group_by(Country) %>% summarise(count = n())
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
# 1. Overall ##################################################################
# Set iteration counter to 0. This is needed only for numbering the output .png
# plots. This needs to be an external variable.
counter <- 0
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country)
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country)
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
file(BusinessSuccess =='High')
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High') %>%
group_by(Country) %>%
summarise(Count = n())
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High') # %>%
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n())
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(Percent = Count/n*100)
df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100)
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100)
bs
bp <- df %>%
select(Country, BusinessProfitability) %>%
add_count(Country) %>%
filter(BusinessProfitability =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Profitability` = Count/n*100)
bp
bs
bp
merge(bs, bp, by='Country')
merge(bs$`Business Success`, bp$`Business Profitability`, by='Country')
merge(bs, bp, by='Country')
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100)
bs
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100) %>%
select(Country, BusinessSuccess)
bs
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100) %>%
select(Country, BusinessSuccess)
getwd()
library(readxl)
library(tidyverse)
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res_slim.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
df
df %>% group_by(Country) %>% summarise(count = n())
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100) %>%
select(Country, BusinessSuccess)
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100) %>%
select(Country, `Business Success`)
bs
bp <- df %>%
select(Country, BusinessProfitability) %>%
add_count(Country) %>%
filter(BusinessProfitability =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Profitability` = Count/n*100) %>%
select(Country, `Business Profitability`)
bp
merge(bs, bp, by='Country')
plot <- merge(bs, bp, by='Country')
plot
plot %>% pivot_longer(names_to = 'Dimension', values_to = 'Score')
plot %>% pivot_longer(names_to = 'Dimension', values_to = 'Score')
plot %>% pivot_longer(-Country, names_to = 'Dimension', values_to = 'Score')
plot
plot <- plot %>% pivot_longer(-Country, names_to = 'Dimension', values_to = 'Score')
plot
getwd()
library(readxl)
library(tidyverse)
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res_slim.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
df
df %>% group_by(Country) %>% summarise(count = n())
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100) %>%
select(Country, `Business Success`)
bs
bp <- df %>%
select(Country, BusinessProfitability) %>%
add_count(Country) %>%
filter(BusinessProfitability =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Profitability` = Count/n*100) %>%
select(Country, `Business Profitability`)
bp
plot <- merge(bs, bp, by='Country')
plot
plot <- plot %>% pivot_longer(-Country, names_to = 'Dimension', values_to = 'Score')
plot
ggplot(plot, aes(fill= fct_rev(Dimension), y=Score, x= Country, Score)) +
geom_bar(position="dodge", stat = "identity")+
coord_flip()+
guides(fill = guide_legend(reverse = TRUE))+
scale_fill_manual(values = c('#3399FF', 'navyblue'))+
theme_minimal()+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
#axis.text.x = element_blank(),
axis.text.y = element_text(colour='black', size = 18),
axis.text.x = element_text(colour='black', size = 18),
#axis.title.x = element_text(colour='black', size = 16),
legend.position = 'right',
#legend.position = c(0.95, 1.05),
legend.title = element_blank(),
legend.text = element_text(size = 18),
plot.margin = margin(r=25, l=1, b=0, t=1),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 18))
ggplot(plot, aes(fill= Dimension, y=Score, x= Country, Score)) +
geom_bar(position="dodge", stat = "identity")+
coord_flip()+
guides(fill = guide_legend(reverse = TRUE))+
scale_fill_manual(values = c('#3399FF', 'navyblue'))+
theme_minimal()+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
#axis.text.x = element_blank(),
axis.text.y = element_text(colour='black', size = 18),
axis.text.x = element_text(colour='black', size = 18),
#axis.title.x = element_text(colour='black', size = 16),
legend.position = 'right',
#legend.position = c(0.95, 1.05),
legend.title = element_blank(),
legend.text = element_text(size = 18),
plot.margin = margin(r=25, l=1, b=0, t=1),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 18))
plot
getwd()
library(readxl)
library(tidyverse)
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res_slim.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
df
df %>% group_by(Country) %>% summarise(count = n())
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100) %>%
select(Country, `Business Success`)
bs
bp <- df %>%
select(Country, BusinessProfitability) %>%
add_count(Country) %>%
filter(BusinessProfitability =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Profitability` = Count/n*100) %>%
select(Country, `Business Profitability`)
bp
plot <- merge(bs, bp, by='Country')
plot
plot$Country <- fct_reorder(plot$Country, plot$`Business Success`)
plot <- plot %>% pivot_longer(-Country, names_to = 'Dimension', values_to = 'Score')
plot
getwd()
library(readxl)
library(tidyverse)
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res_slim.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
df
df %>% group_by(Country) %>% summarise(count = n())
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n*100) %>%
select(Country, `Business Success`)
bs
bp <- df %>%
select(Country, BusinessProfitability) %>%
add_count(Country) %>%
filter(BusinessProfitability =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Profitability` = Count/n*100) %>%
select(Country, `Business Profitability`)
bp
plot <- merge(bs, bp, by='Country')
plot
plot$Country <- fct_reorder(plot$Country, plot$`Business Success`)
plot
plot <- plot %>% pivot_longer(-Country, names_to = 'Dimension', values_to = 'Score')
plot
ggplot(plot, aes(fill= Dimension, y=Score, x= Country, Score)) +
geom_bar(position="dodge", stat = "identity")+
coord_flip()+
guides(fill = guide_legend(reverse = TRUE))+
scale_fill_manual(values = c('#3399FF', 'navyblue'))+
theme_minimal()+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
#axis.text.x = element_blank(),
axis.text.y = element_text(colour='black', size = 18),
axis.text.x = element_text(colour='black', size = 18),
#axis.title.x = element_text(colour='black', size = 16),
legend.position = 'right',
#legend.position = c(0.95, 1.05),
legend.title = element_blank(),
legend.text = element_text(size = 18),
plot.margin = margin(r=25, l=1, b=0, t=1),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 18))
ggplot(plot, aes(fill= Dimension, y=Score, x= Country, Score)) +
geom_bar(position="dodge", stat = "identity")+
coord_flip()+
guides(fill = guide_legend(reverse = TRUE))+
scale_fill_manual(values = c('#3399FF', 'navyblue'))+
theme_minimal()+
scale_y_continuous(labels = scales::percent)
ggplot(plot, aes(fill= Dimension, y=Score, x= Country, Score)) +
geom_bar(position="dodge", stat = "identity")+
coord_flip()+
guides(fill = guide_legend(reverse = TRUE))+
scale_fill_manual(values = c('#3399FF', 'navyblue'))+
theme_minimal()+
scale_y_continuous(labels = scales::percent)+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
#axis.text.x = element_blank(),
axis.text.y = element_text(colour='black', size = 18),
axis.text.x = element_text(colour='black', size = 18),
#axis.title.x = element_text(colour='black', size = 16),
legend.position = 'right',
#legend.position = c(0.95, 1.05),
legend.title = element_blank(),
legend.text = element_text(size = 18),
plot.margin = margin(r=25, l=1, b=0, t=1),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 18))
getwd()
library(readxl)
library(tidyverse)
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res_slim.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
df
df %>% group_by(Country) %>% summarise(count = n())
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Success` = Count/n) %>%
select(Country, `Business Success`)
bs
bp <- df %>%
select(Country, BusinessProfitability) %>%
add_count(Country) %>%
filter(BusinessProfitability =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`Business Profitability` = Count/n) %>%
select(Country, `Business Profitability`)
bp
plot <- merge(bs, bp, by='Country')
plot
plot$Country <- fct_reorder(plot$Country, plot$`Business Success`)
plot
plot <- plot %>% pivot_longer(-Country, names_to = 'Dimension', values_to = 'Score')
plot
ggplot(plot, aes(fill= Dimension, y=Score, x= Country, Score)) +
geom_bar(position="dodge", stat = "identity")+
coord_flip()+
guides(fill = guide_legend(reverse = TRUE))+
scale_fill_manual(values = c('#3399FF', 'navyblue'))+
theme_minimal()+
scale_y_continuous(labels = scales::percent)+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
#axis.text.x = element_blank(),
axis.text.y = element_text(colour='black', size = 18),
axis.text.x = element_text(colour='black', size = 18),
#axis.title.x = element_text(colour='black', size = 16),
legend.position = 'right',
#legend.position = c(0.95, 1.05),
legend.title = element_blank(),
legend.text = element_text(size = 18),
plot.margin = margin(r=25, l=1, b=0, t=1),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 18))
getwd()
library(readxl)
library(tidyverse)
# Load res object as df, and convert strings to factors
df <- readRDS('data_clean/res_slim.rds')%>%
mutate(across(where(is.character), as.factor))
dim(df) # 2,026 x 33
# Discard unplottable variables
df <- df %>% select(-c(MimosaID, InterviewDate))
dim(df)
df
df %>% group_by(Country) %>% summarise(count = n())
bs <- df %>%
select(Country, BusinessSuccess) %>%
add_count(Country) %>%
filter(BusinessSuccess =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`High Business Success` = Count/n) %>%
select(Country, `High Business Success`)
bs
bp <- df %>%
select(Country, BusinessProfitability) %>%
add_count(Country) %>%
filter(BusinessProfitability =='High')  %>%
group_by(Country, n) %>%
summarise(Count = n()) %>%
mutate(`High Business Profitability` = Count/n) %>%
select(Country, `High Business Profitability`)
bp
plot <- merge(bs, bp, by='Country')
plot
plot$Country <- fct_reorder(plot$Country, plot$`High Business Success`)
plot
plot <- plot %>% pivot_longer(-Country, names_to = 'Dimension', values_to = 'Score')
plot
ggplot(plot, aes(fill= Dimension, y=Score, x= Country, Score)) +
geom_bar(position="dodge", stat = "identity")+
coord_flip()+
guides(fill = guide_legend(reverse = TRUE))+
scale_fill_manual(values = c('#3399FF', 'navyblue'))+
theme_minimal()+
scale_y_continuous(labels = scales::percent)+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
#axis.text.x = element_blank(),
axis.text.y = element_text(colour='black', size = 18),
axis.text.x = element_text(colour='black', size = 18),
#axis.title.x = element_text(colour='black', size = 16),
legend.position = 'right',
#legend.position = c(0.95, 1.05),
legend.title = element_blank(),
legend.text = element_text(size = 18),
plot.margin = margin(r=25, l=1, b=0, t=1),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 18))
#panel.grid = element_blank())
