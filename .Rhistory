df %>% group_by(TrainingType) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
colSums(is.na(df))
# Before
df %>% group_by(ReceivedSupportAs) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
colSums(is.na(df))
# Before
df %>% group_by(AssistanceType) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
getwd()
library(readxl)
library(tidyverse)
# Reintegration Economic Survey ####
res <- read_excel('data_raw/Reintegration Economic_clean 6.6.23_doublons corrigesV2.xlsx',
na = c('N/A', 'NA', 'na'))
warnings()
dim(res) #   2,001 x 154
# Subset ####
df <- res %>%
select(
# Metadata
"Identifiant MiMOSA du cas bis",
"Projet Bis",
"Date de l'enquête",
"Date de reception de la reintegration", # We choose this one since it has less NA
# than Date of beginning of training
"Mode d'enquête",
# Dependent variables
"Comment se porte votre entreprise ou business actuellement ?",
"L’entreprise vous permet -elle de gagner assez d’argent pour subvenir à vos besoins et à celle de votre famille ?",
"Avez-vous déjà planifié de migrer de nouveau ?",
"Si vous n’aviez pas bénéficié de l’aide de l’OIM pour votre réintégration économique quelle serait votre situation actuelle ?",
"Pensez-vous que le retour a été une bonne décision ?",
"Êtes-vous satisfait de l’aide à la réintégration de manière globale ?",
# Grouping variables
"Pays",
"Pays d’où le migrant est de retour :",
"Sexe",
"Age (l'enquête est destinée aux personnes agées de 14 ans et plus)",
"Durée de l’absence du pays d’origine   Mettre 0 si moins d'un an",
"Situation de handicap",
"Type de formation",
"Date de debut formation",
"Date de fin formation",
"Combien de temps entre votre retour et la réception de l’aide à la réintégration (ou sa première fourniture) ? En semaines",
"Par quel moyen avez-vous reçu cette assistance économique ?",
#"Quel est le principal type d’assistance économique que vous avez reçue ?",
"Type de business bis",
"Qui sont les membres de cette entreprise ?",
"Niveau microbusiness",
"L'OIM   ou un de ses partenaires vous a-t-elle formé sur la façon de gérer une entreprise ?",
"L’entreprise emploie-t-elle du personnel ?",
"Si oui, combien des personnes sont employées par votre entreprise ?",
"Est-ce votre entreprise a été affectée par la maladie de Coronavirus ?",
"Est-ce que le type d'assistance économique que vous avez reçu correspondait à votre premier choix ?"
) %>%
rename(
# Metadata
"MimosaID" =
"Identifiant MiMOSA du cas bis",
"Project" =
"Projet Bis",
"InterviewDate" =
"Date de l'enquête",
"ReintegrationDate" =
"Date de reception de la reintegration",
"InterviewType" =
"Mode d'enquête",
# Dependent variables
"BusinessSucess" =
"Comment se porte votre entreprise ou business actuellement ?",
"BusinessProfitability" =
"L’entreprise vous permet -elle de gagner assez d’argent pour subvenir à vos besoins et à celle de votre famille ?",
"WouldMigrateAgain" =
"Avez-vous déjà planifié de migrer de nouveau ?",
"SituationWithoutSupport" =
"Si vous n’aviez pas bénéficié de l’aide de l’OIM pour votre réintégration économique quelle serait votre situation actuelle ?",
"ReturningWasGoodDecision" =
"Pensez-vous que le retour a été une bonne décision ?",
"SatisfiedWithReintegrationSupport" =
"Êtes-vous satisfait de l’aide à la réintégration de manière globale ?",
# Grouping variables
"Country" =
"Pays",
"CountryOfReturn" =
"Pays d’où le migrant est de retour :",
"Gender" =
"Sexe",
"AgeGroup" =
"Age (l'enquête est destinée aux personnes agées de 14 ans et plus)",
"MigrationDuration" =
"Durée de l’absence du pays d’origine   Mettre 0 si moins d'un an",
"Disabled" =
"Situation de handicap",
"TrainingType" =
"Type de formation",
"TrainingStart" =
"Date de debut formation",
"TrainingEnd" =
"Date de fin formation",
"TimeToReceiveSupport" =
"Combien de temps entre votre retour et la réception de l’aide à la réintégration (ou sa première fourniture) ? En semaines",
"ReceivedSupportAs" =
"Par quel moyen avez-vous reçu cette assistance économique ?",
#"AssistanceType" =
#  "Quel est le principal type d’assistance économique que vous avez reçue ?",
"BusinessType" =
"Type de business bis",
"BusinessMembers" =
"Qui sont les membres de cette entreprise ?",
"MicroBusinessLevel" =
"Niveau microbusiness",
"ReceivedIOMBusinessAdvice" =
"L'OIM   ou un de ses partenaires vous a-t-elle formé sur la façon de gérer une entreprise ?",
"BusinessHasEmployees" =
"L’entreprise emploie-t-elle du personnel ?",
"EmployeeNumber" =
"Si oui, combien des personnes sont employées par votre entreprise ?",
"CoronaImpactOnBusiness" =
"Est-ce votre entreprise a été affectée par la maladie de Coronavirus ?",
"FirstChoice" =
"Est-ce que le type d'assistance économique que vous avez reçu correspondait à votre premier choix ?"
) %>%
# Add variables
mutate(SupportDuration =
as.numeric(difftime(InterviewDate, ReintegrationDate, units = "days")),
TrainingDuration =
as.numeric(difftime(TrainingEnd, TrainingStart, units = "days"))
) %>%
# Filter out NL countries (Togo = 8, Sierra-Leone = 45)
filter(Country != 'Togo' & Country != 'Sierra-Leone')
dim(df) #    1948 x 33
# NA
colSums(is.na(df))
# Perfect
sum(duplicated(df)) # 0
# Previously 2
dim(df) # 1948 x 33
# Pseudo
sum(duplicated(df$MimosaID)) # 95
# Previously 77
df[duplicated(df$MimosaID), 'MimosaID'] %>% print(n = 95)
# Data types
str(df)
# Check levels before
df %>% group_by(MigrationDuration) %>% summarise(count = n()) %>% print(n = 31) # --> all are numbers
df %>% group_by(TimeToReceiveSupport) %>% summarise(count = n()) %>% print(n = 116) # --> not all are numbers;
# 35 answsers are not numbers, out of which most (29) are 'je ne me souviens pas'. These can be safely
# coerced to NA, since we will then replace NA with the median. One observation, which is 16o (letter o
# instead of number 0), is manually changed here:
df[!is.na(df$TimeToReceiveSupport) & df$TimeToReceiveSupport == '16o', "TimeToReceiveSupport"]  <- "160"
# Converting to numeric could produce NA
# Print before
colSums(is.na(df))
# Character to Numeric
df$MigrationDuration <- as.numeric(df$MigrationDuration)
df$TimeToReceiveSupport <- as.numeric(df$TimeToReceiveSupport)
# Print after
colSums(is.na(df))
# Check levels after
df %>% group_by(MigrationDuration) %>% summarise(count = n()) %>% print(n = 31) # --> we see, e.g.,
# that count of 3 is 252, which are the 251 3 plus 1 03 from above
df %>% group_by(TimeToReceiveSupport) %>% summarise(count = n()) %>% print(n = 116) # we see, e.g.,
# Print levels
levels(as.factor(df$BusinessSucess))
levels(as.factor(df$BusinessProfitability))
levels(as.factor(df$WouldMigrateAgain))
# Print counts
df %>% group_by(BusinessSucess) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(BusinessProfitability) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(WouldMigrateAgain) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df <- df %>% mutate(
BusinessSucess =
case_when(BusinessSucess == 'Actuellement ouvert et les activités marchent bien' ~ 'High',
BusinessSucess != 'Actuellement ouvert et les activités marchent bien' ~ 'Low'),
BusinessProfitability =
case_when(BusinessProfitability == 'Oui' ~ 'High',
BusinessProfitability != 'Oui' ~ 'Low'),
WouldMigrateAgain =
case_when(WouldMigrateAgain == 'Non' ~ 'No',
WouldMigrateAgain != 'Non' ~ 'Yes')
)
# Reprint counts
df %>% group_by(BusinessSucess) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(BusinessProfitability) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(WouldMigrateAgain) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
# Assess NA
colSums(is.na(df))
colSums(is.na(df))
# Before
df %>% group_by(AssistanceType) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df <- df %>% mutate(
InterviewType =
case_when(InterviewType == 'Par téléphone' ~ 'Par téléphone',
InterviewType != 'Par téléphone' ~ 'Terrain/bureau OIM'
),
Country =
case_when(
Country != "Sénégal" & Country != "Guinée" & Country != "Côte D'Ivoire" & Country != "Burkina Faso" & Country != "Ghana" ~ 'Autre',
TRUE ~ as.character(Country)
),
CountryOfReturn =
case_when(
CountryOfReturn != "Lybie" & CountryOfReturn != "Algerie" & CountryOfReturn != "Niger" & CountryOfReturn != "Maroc" ~ 'Autre',
TRUE ~ as.character(CountryOfReturn)
),
Gender =
case_when(
Gender == "Masculin"  ~ "Masculin",
Gender == "Féminin" ~ "Féminin" # we purposefully do not specify Refused, to convert
# it to a NA
),
AgeGroup =
case_when(
AgeGroup == "18-35 ans" ~ "14-35",
AgeGroup == "36-65 ans" ~ "36+",
AgeGroup == "14-17 ans" ~ "14-35",
AgeGroup == "+65 ans" ~ "36+"
),
TrainingType =
case_when(
TrainingType == "Business development/management training" ~ "Business/management",
TrainingType != "Business development/management training" ~ "Other/Unknown" # NA
# purposefully not specified to keep them as is
),
)
# After
df %>% group_by(ReceivedSupportAs) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
# Before
df %>% group_by(AssistanceType) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
# Assess NA
colSums(is.na(df))
# Before
df %>% group_by(BusinessType) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
# Main difference from v1: we use a new dataset with 77 pseudo duplicates removed.
getwd()
library(readxl)
library(tidyverse)
# Reintegration Economic Survey ####
res <- read_excel('data_raw/Reintegration Economic_clean 6.6.23_doublons corrigesV2.xlsx',
na = c('N/A', 'NA', 'na'))
warnings()
dim(res) #   2,001 x 154
# Previously 2,012 x 154
# Subset ####
df <- res %>%
select(
# Metadata
"Identifiant MiMOSA du cas bis",
"Projet Bis",
"Date de l'enquête",
"Date de reception de la reintegration", # We choose this one since it has less NA
# than Date of beginning of training
"Mode d'enquête",
# Dependent variables
"Comment se porte votre entreprise ou business actuellement ?",
"L’entreprise vous permet -elle de gagner assez d’argent pour subvenir à vos besoins et à celle de votre famille ?",
"Avez-vous déjà planifié de migrer de nouveau ?",
"Si vous n’aviez pas bénéficié de l’aide de l’OIM pour votre réintégration économique quelle serait votre situation actuelle ?",
"Pensez-vous que le retour a été une bonne décision ?",
"Êtes-vous satisfait de l’aide à la réintégration de manière globale ?",
# Grouping variables
"Pays",
"Pays d’où le migrant est de retour :",
"Sexe",
"Age (l'enquête est destinée aux personnes agées de 14 ans et plus)",
"Durée de l’absence du pays d’origine   Mettre 0 si moins d'un an",
"Situation de handicap",
"Type de formation",
"Date de debut formation",
"Date de fin formation",
"Combien de temps entre votre retour et la réception de l’aide à la réintégration (ou sa première fourniture) ? En semaines",
"Par quel moyen avez-vous reçu cette assistance économique ?",
#"Quel est le principal type d’assistance économique que vous avez reçue ?",
"Type de business bis",
"Qui sont les membres de cette entreprise ?",
"Niveau microbusiness",
"L'OIM   ou un de ses partenaires vous a-t-elle formé sur la façon de gérer une entreprise ?",
"L’entreprise emploie-t-elle du personnel ?",
"Si oui, combien des personnes sont employées par votre entreprise ?",
"Est-ce votre entreprise a été affectée par la maladie de Coronavirus ?",
"Est-ce que le type d'assistance économique que vous avez reçu correspondait à votre premier choix ?"
) %>%
rename(
# Metadata
"MimosaID" =
"Identifiant MiMOSA du cas bis",
"Project" =
"Projet Bis",
"InterviewDate" =
"Date de l'enquête",
"ReintegrationDate" =
"Date de reception de la reintegration",
"InterviewType" =
"Mode d'enquête",
# Dependent variables
"BusinessSucess" =
"Comment se porte votre entreprise ou business actuellement ?",
"BusinessProfitability" =
"L’entreprise vous permet -elle de gagner assez d’argent pour subvenir à vos besoins et à celle de votre famille ?",
"WouldMigrateAgain" =
"Avez-vous déjà planifié de migrer de nouveau ?",
"SituationWithoutSupport" =
"Si vous n’aviez pas bénéficié de l’aide de l’OIM pour votre réintégration économique quelle serait votre situation actuelle ?",
"ReturningWasGoodDecision" =
"Pensez-vous que le retour a été une bonne décision ?",
"SatisfiedWithReintegrationSupport" =
"Êtes-vous satisfait de l’aide à la réintégration de manière globale ?",
# Grouping variables
"Country" =
"Pays",
"CountryOfReturn" =
"Pays d’où le migrant est de retour :",
"Gender" =
"Sexe",
"AgeGroup" =
"Age (l'enquête est destinée aux personnes agées de 14 ans et plus)",
"MigrationDuration" =
"Durée de l’absence du pays d’origine   Mettre 0 si moins d'un an",
"Disabled" =
"Situation de handicap",
"TrainingType" =
"Type de formation",
"TrainingStart" =
"Date de debut formation",
"TrainingEnd" =
"Date de fin formation",
"TimeToReceiveSupport" =
"Combien de temps entre votre retour et la réception de l’aide à la réintégration (ou sa première fourniture) ? En semaines",
"ReceivedSupportAs" =
"Par quel moyen avez-vous reçu cette assistance économique ?",
#"AssistanceType" =
#  "Quel est le principal type d’assistance économique que vous avez reçue ?",
"BusinessType" =
"Type de business bis",
"BusinessMembers" =
"Qui sont les membres de cette entreprise ?",
"MicroBusinessLevel" =
"Niveau microbusiness",
"ReceivedIOMBusinessAdvice" =
"L'OIM   ou un de ses partenaires vous a-t-elle formé sur la façon de gérer une entreprise ?",
"BusinessHasEmployees" =
"L’entreprise emploie-t-elle du personnel ?",
"EmployeeNumber" =
"Si oui, combien des personnes sont employées par votre entreprise ?",
"CoronaImpactOnBusiness" =
"Est-ce votre entreprise a été affectée par la maladie de Coronavirus ?",
"FirstChoice" =
"Est-ce que le type d'assistance économique que vous avez reçu correspondait à votre premier choix ?"
) %>%
# Add variables
mutate(SupportDuration =
as.numeric(difftime(InterviewDate, ReintegrationDate, units = "days")),
TrainingDuration =
as.numeric(difftime(TrainingEnd, TrainingStart, units = "days"))
) %>%
# Filter out NL countries (Togo = 8, Sierra-Leone = 45)
filter(Country != 'Togo' & Country != 'Sierra-Leone')
dim(df) #    1948 x 32
# Previously 1959 x 32
#view(df)
# NA
colSums(is.na(df))
# Dupes
# Perfect
sum(duplicated(df)) # 0
# Previously 2
dim(df) # 1948 x 33
# Previously 1957 x 33
# Pseudo
sum(duplicated(df$MimosaID)) # 95
# Previously 77
df[duplicated(df$MimosaID), 'MimosaID'] %>% print(n = 95)
# Note, they are all NA, as expected
# Data types
str(df)
# MigrationDuration     chr --> needs to be converted
# TimeToReceiveSupport  chr --> needs to be converted
# SupportDuration       num
# TrainingDuration      num
# Check levels before
df %>% group_by(MigrationDuration) %>% summarise(count = n()) %>% print(n = 31) # --> all are numbers
df %>% group_by(TimeToReceiveSupport) %>% summarise(count = n()) %>% print(n = 116) # --> not all are numbers;
# 35 answsers are not numbers, out of which most (29) are 'je ne me souviens pas'. These can be safely
# coerced to NA, since we will then replace NA with the median. One observation, which is 16o (letter o
# instead of number 0), is manually changed here:
df[!is.na(df$TimeToReceiveSupport) & df$TimeToReceiveSupport == '16o', "TimeToReceiveSupport"]  <- "160"
# Converting to numeric could produce NA
# Print before
colSums(is.na(df))
# MigrationDuration     110
# TimeToReceiveSupport  169
# Character to Numeric
df$MigrationDuration <- as.numeric(df$MigrationDuration)
df$TimeToReceiveSupport <- as.numeric(df$TimeToReceiveSupport)
# Print after
colSums(is.na(df))
# MigrationDuration     110
# TimeToReceiveSupport  203 (34 NA introduced by coercion, which corresponds to no number from above;
# this can therefore be safely ignored)
# Check levels after
df %>% group_by(MigrationDuration) %>% summarise(count = n()) %>% print(n = 31) # --> we see, e.g.,
# that count of 3 is 252, which are the 251 3 plus 1 03 from above
df %>% group_by(TimeToReceiveSupport) %>% summarise(count = n()) %>% print(n = 116) # we see, e.g.,
# that count of 160 is now 4, which are the three cases from above plus the 160 which manually corrected
# Recode dependent variables
# Print levels
levels(as.factor(df$BusinessSucess))
levels(as.factor(df$BusinessProfitability))
levels(as.factor(df$WouldMigrateAgain))
# Print counts
df %>% group_by(BusinessSucess) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(BusinessProfitability) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(WouldMigrateAgain) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df <- df %>% mutate(
BusinessSucess =
case_when(BusinessSucess == 'Actuellement ouvert et les activités marchent bien' ~ 'High',
BusinessSucess != 'Actuellement ouvert et les activités marchent bien' ~ 'Low'),
BusinessProfitability =
case_when(BusinessProfitability == 'Oui' ~ 'High',
BusinessProfitability != 'Oui' ~ 'Low'),
WouldMigrateAgain =
case_when(WouldMigrateAgain == 'Non' ~ 'No',
WouldMigrateAgain != 'Non' ~ 'Yes')
)
# Reprint counts
df %>% group_by(BusinessSucess) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(BusinessProfitability) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df %>% group_by(WouldMigrateAgain) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
# Assess NA
colSums(is.na(df))
# Recode Independent variables
# Principles:
# Answers who represent less than 10% of all answers are grouped together
# Exceptions:
# Disabled, with 95% Non and 5% Yes, is kept as is
colSums(is.na(df))
# Before
df %>% group_by(BusinessType) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
df <- df %>% mutate(
InterviewType =
case_when(InterviewType == 'Par téléphone' ~ 'Par téléphone',
InterviewType != 'Par téléphone' ~ 'Terrain/bureau OIM'
),
Country =
case_when(
Country != "Sénégal" & Country != "Guinée" & Country != "Côte D'Ivoire" & Country != "Burkina Faso" & Country != "Ghana" ~ 'Autre',
TRUE ~ as.character(Country)
),
CountryOfReturn =
case_when(
CountryOfReturn != "Lybie" & CountryOfReturn != "Algerie" & CountryOfReturn != "Niger" & CountryOfReturn != "Maroc" ~ 'Autre',
TRUE ~ as.character(CountryOfReturn)
),
Gender =
case_when(
Gender == "Masculin"  ~ "Masculin",
Gender == "Féminin" ~ "Féminin" # we purposefully do not specify Refused, to convert
# it to a NA
),
AgeGroup =
case_when(
AgeGroup == "18-35 ans" ~ "14-35",
AgeGroup == "36-65 ans" ~ "36+",
AgeGroup == "14-17 ans" ~ "14-35",
AgeGroup == "+65 ans" ~ "36+"
),
TrainingType =
case_when(
TrainingType == "Business development/management training" ~ "Business/management",
TrainingType != "Business development/management training" ~ "Other/Unknown" # NA
# purposefully not specified to keep them as is
),
BusinessType =
case_when(
BusinessType == "Commerce" ~ "Commerce",
BusinessType == "Elevage" ~ "Elevage",
BusinessType == "Transport (Moto - Auto)" ~ "Transport",
BusinessType == "Agriculture" ~ "Agriculture/aviculture",
BusinessType == "Aviculture" ~ "Agriculture/aviculture",
BusinessType == "Artisan-Ouvrier" ~ "Autre",
BusinessType == "Couture" ~ "Autre",
BusinessType == "Autre" ~ "Autre",
BusinessType == "Restauration" ~ "Autre",
BusinessType == "Bâtiment/construction" ~ "Autre",
BusinessType == "Coiffure - Salon de beauté" ~ "Autre",
BusinessType == "Mécanique" ~ "Autre"
)
)
# After
df %>% group_by(BusinessType) %>% summarise(count = n()) %>%
mutate(percent = count/sum(count)*100) %>% arrange(-percent)
# Assess NA
colSums(is.na(df))
